{"version":3,"sources":["redux/ducks/timeDucks.js","redux/ducks/index.js","redux/store.js","styles/components/StyledAddStopwatch.js","components/AddStopwatch.js","styles/components/StyledStopwatch.js","components/Stopwatch.js","styles/GlobalStyle.js","styles/StyledApp.js","App.js","index.js"],"names":["NEW_STOPWATCH","RESUME_STOPWATCH","DELETE_STOPWATCH","LOCAL_STORAGE","initialState","timeTracks","id","title","savedTime","isActive","resumeStopwatch","obj","type","payload","rootReducer","combineReducers","time","state","action","index","findIndex","item","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","StyledAddStopwatch","styled","form","AddStopwatch","useState","trackName","setTrackName","dispatch","useDispatch","onSubmit","e","preventDefault","newObj","uuid","moment","format","className","placeholder","onChange","target","value","StyledStopwatch","div","Stopwatch","useEffect","interval","setInterval","clearInterval","onResume","Math","floor","slice","onClick","deleteStopwatch","GlobalStyle","createGlobalStyle","normalize","StyledApp","App","useSelector","localStorage","localArray","localArr","JSON","parse","getItem","err","console","log","setItem","stringify","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a29567d2.chunk.js","sourcesContent":["// Actions\r\nconst NEW_STOPWATCH = 'time/NEW_STOPWATCH';\r\nconst RESUME_STOPWATCH = 'time/RESUME_STOPWATCH';\r\nconst DELETE_STOPWATCH = 'time/DELETE_STOPWATCH';\r\nconst LOCAL_STORAGE = 'time/LOCAL_STORAGE';\r\n\r\n// Reducer\r\nconst initialState = {\r\n  timeTracks: [\r\n    { id: '0', title: 'Tracker #1', savedTime: 1800000, isActive: false },\r\n    { id: '1', title: 'Tracker #2', savedTime: 172800000, isActive: false }\r\n  ]\r\n};\r\n\r\nexport const timeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case NEW_STOPWATCH:\r\n      return { ...state, timeTracks: [action.payload, ...state.timeTracks] };\r\n    case RESUME_STOPWATCH: {\r\n      const timeTracks = [...state.timeTracks];\r\n      const index = timeTracks.findIndex(item => item.id === action.payload.id);\r\n      timeTracks[index] = { ...action.payload };\r\n      return { timeTracks };\r\n    }\r\n    case DELETE_STOPWATCH:\r\n      return {\r\n        ...state,\r\n        timeTracks: state.timeTracks.filter(time => time.id !== action.payload)\r\n      };\r\n    case LOCAL_STORAGE:\r\n      return { ...state, timeTracks: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// Action Creators\r\nexport const addNewStopwatch = obj => ({\r\n  type: NEW_STOPWATCH,\r\n  payload: obj\r\n});\r\n\r\nexport const resumeStopwatch = obj => ({\r\n  type: RESUME_STOPWATCH,\r\n  payload: obj\r\n});\r\n\r\nexport const deleteStopwatch = id => ({\r\n  type: DELETE_STOPWATCH,\r\n  payload: id\r\n});\r\n\r\nexport const addLocalStorage = arr => ({\r\n  type: LOCAL_STORAGE,\r\n  payload: arr\r\n});\r\n","import { combineReducers } from 'redux';\r\nimport { timeReducer } from './timeDucks';\r\n\r\nconst rootReducer = combineReducers({\r\n  time: timeReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { createStore, compose } from 'redux';\r\nimport rootReducer from './ducks';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers());\r\n\r\nexport default store;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledAddStopwatch = styled.form`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-bottom: 40px;\r\n  .input__wrapper {\r\n    width: 600px;\r\n    max-width: 100%;\r\n    position: relative;\r\n\r\n    input {\r\n      border: 1px solid #000;\r\n      border-radius: 30px;\r\n      width: 600px;\r\n      max-width: 100%;\r\n      height: 40px;\r\n      padding: 10px 50px 10px 15px;\r\n      outline: none;\r\n    }\r\n\r\n    button {\r\n      background-color: transparent;\r\n      padding: 0;\r\n      border: none;\r\n      outline: none;\r\n      cursor: pointer;\r\n    }\r\n\r\n    .add {\r\n      font-size: 40px;\r\n      fill: #3faf6c;\r\n      top: 0;\r\n      right: 0;\r\n      position: absolute;\r\n      transition: 0.3s;\r\n\r\n      &:hover {\r\n        fill: #3abf70;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { addNewStopwatch } from '../redux/ducks/timeDucks';\r\nimport { AiFillPlayCircle } from 'react-icons/ai';\r\nimport { StyledAddStopwatch } from '../styles/components/StyledAddStopwatch';\r\n\r\nconst AddStopwatch = () => {\r\n  let [trackName, setTrackName] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    const newObj = {\r\n      id: uuid(),\r\n      title: trackName || moment().format('Do MMMM YYYY, H:mm:ss a'),\r\n      savedTime: 0,\r\n      isActive: true\r\n    };\r\n\r\n    dispatch(addNewStopwatch(newObj));\r\n    setTrackName('');\r\n  };\r\n\r\n  return (\r\n    <StyledAddStopwatch onSubmit={handleSubmit}>\r\n      <div className='input__wrapper'>\r\n        <input\r\n          type='text'\r\n          placeholder='Enter tracker name'\r\n          onChange={e => setTrackName(e.target.value)}\r\n          value={trackName}\r\n        />\r\n        <button type='submit'>\r\n          <AiFillPlayCircle className='add' />\r\n        </button>\r\n      </div>\r\n    </StyledAddStopwatch>\r\n  );\r\n};\r\n\r\nexport default AddStopwatch;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledStopwatch = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .name {\r\n    line-height: 1.5;\r\n    max-width: 350px;\r\n\r\n    @media (max-width: 650px) {\r\n      max-width: 300px;\r\n    }\r\n\r\n    @media (max-width: 550px) {\r\n      max-width: 200px;\r\n    }\r\n\r\n    @media (max-width: 450px) {\r\n      max-width: 120px;\r\n    }\r\n  }\r\n\r\n  .time {\r\n    margin-left: auto;\r\n  }\r\n\r\n  .resume,\r\n  .stop {\r\n    font-size: 25px;\r\n    fill: #2a2424;\r\n    margin-left: 20px;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 450px) {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    &:hover {\r\n      fill: #000;\r\n    }\r\n  }\r\n\r\n  .delete {\r\n    font-size: 25px;\r\n    fill: #d2697a;\r\n    margin-left: 10px;\r\n    transition: 0.3s;\r\n    cursor: pointer;\r\n\r\n    @media (max-width: 450px) {\r\n      margin-left: 5px;\r\n    }\r\n\r\n    &:hover {\r\n      fill: tomato;\r\n    }\r\n  }\r\n\r\n  .active {\r\n    color: #3faf6c;\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { resumeStopwatch, deleteStopwatch } from '../redux/ducks/timeDucks';\r\nimport {\r\n  AiFillPlayCircle,\r\n  AiFillPauseCircle,\r\n  AiOutlineMinusCircle\r\n} from 'react-icons/ai';\r\nimport { StyledStopwatch } from '../styles/components/StyledStopwatch';\r\n\r\nconst Stopwatch = ({ id, title, savedTime, isActive }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    let interval = null;\r\n\r\n    if (isActive) {\r\n      interval = setInterval(() => {\r\n        const newObj = {\r\n          id,\r\n          title,\r\n          savedTime: savedTime + 1000,\r\n          isActive\r\n        };\r\n\r\n        dispatch(resumeStopwatch(newObj));\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(interval);\r\n    }\r\n\r\n    return () => clearInterval(interval);\r\n  }, [id, title, savedTime, isActive, dispatch]);\r\n\r\n  const onResume = () => {\r\n    const newObj = {\r\n      id,\r\n      title,\r\n      savedTime,\r\n      isActive: !isActive\r\n    };\r\n\r\n    dispatch(resumeStopwatch(newObj));\r\n  };\r\n\r\n  const onDelete = () => {\r\n    dispatch(deleteStopwatch(id));\r\n  };\r\n\r\n  return (\r\n    <StyledStopwatch>\r\n      <p className={isActive ? 'name active' : 'name'}>{title}</p>\r\n      <div className={isActive ? 'time active' : 'time'}>\r\n        <span>{('0' + Math.floor((savedTime / 3600000) % 60)).slice(-2)}:</span>\r\n        <span>{('0' + Math.floor((savedTime / 60000) % 60)).slice(-2)}:</span>\r\n        <span>{('0' + Math.floor((savedTime / 1000) % 60)).slice(-2)}</span>\r\n      </div>\r\n      <div>\r\n        {isActive ? (\r\n          <AiFillPauseCircle className='stop' onClick={onResume} />\r\n        ) : (\r\n          <AiFillPlayCircle className='resume' onClick={onResume} />\r\n        )}\r\n        <AiOutlineMinusCircle className='delete' onClick={onDelete} />\r\n      </div>\r\n    </StyledStopwatch>\r\n  );\r\n};\r\n\r\nexport default Stopwatch;\r\n","import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  *,\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  \r\n  body {\r\n    font-family: 'Open Sans', sans-serif;\r\n    max-width: 1200px;\r\n    padding: 0 25px;\r\n    margin: 0 auto;\r\n    color: #000;\r\n    background-color: #fff;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const StyledApp = styled.div`\r\n  .title {\r\n    font-size: 50px;\r\n    text-align: center;\r\n  }\r\n\r\n  .list {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 0;\r\n\r\n    .item {\r\n      font-size: 16px;\r\n      font-weight: 700;\r\n      list-style: none;\r\n      width: 600px;\r\n      max-width: 100%;\r\n      padding: 10px 20px;\r\n      border-top: 1px solid #ccc;\r\n\r\n      @media (max-width: 450px) {\r\n        padding: 5px 10px;\r\n      }\r\n\r\n      @media (max-width: 350px) {\r\n        font-size: 14px;\r\n      }\r\n\r\n      &:last-child {\r\n        border-bottom: 1px solid #ccc;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AddStopwatch, Stopwatch } from './components';\nimport { addLocalStorage } from './redux/ducks/timeDucks';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { StyledApp } from './styles/StyledApp';\n\nconst App = () => {\n  const timeTracks = useSelector(state => state.time.timeTracks);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    try {\n      if (localStorage.localArray) {\n        const localArr = JSON.parse(localStorage.getItem('localArray'));\n        dispatch(addLocalStorage(localArr));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  }, [dispatch]);\n\n  useEffect(() => {\n    localStorage.setItem('localArray', JSON.stringify(timeTracks));\n  }, [timeTracks]);\n\n  return (\n    <>\n      <GlobalStyle />\n      <StyledApp>\n        <h1 className='title'>Tracker</h1>\n        <AddStopwatch />\n        <ul className='list'>\n          {timeTracks.map(time => (\n            <li className='item' key={time.id}>\n              <Stopwatch {...time} />\n            </li>\n          ))}\n        </ul>\n      </StyledApp>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}